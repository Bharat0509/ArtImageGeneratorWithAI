"use client";
import { useState } from "react";
import Card from "./components/Card";
import { getImages } from "@/lib/action";
type Image = {
    _id: string;
    name: string;
    prompt: string;
    public_id: string;
    image: string;
};
type ImagesType = {
    images: Image[];
};
type CardsProps = {
    data?: Image[];
    title: string;
};
const RenderCards = ({ data, title }: CardsProps) => {
    if (data!.length > 0) {
        return (
            <>
                {data!.map((post, ind) => (
                    <Card key={ind} {...post} />
                ))}
            </>
        );
    }
    return (
        <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>
            {title}
        </h2>
    );
};

export default async function Home() {
    const [searchText, setSearchText] = useState(
        "A Tree With Beautiful Leaves surrounded by Hills"
    );

    const data = (await getImages()) as ImagesType;

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-4xl'>
                    The Community Showcase
                </h1>
                <p className='mt-2 text-[#666e75] text-sm max-w-[500px]'>
                    Browse through a collection of imaginative and visually
                    stunning images generated by DALL-E AI
                </p>
                <div className='mt-16'>{/* <FormField /> */}</div>
            </div>
            <div className='mt-10'>
                {searchText && (
                    <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                        Showing result for
                        <span className='text-[#16171c]'> {searchText}</span>
                    </h2>
                )}
                <div className='grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2  grid-cols-1 gap-3'>
                    {searchText ? (
                        <RenderCards
                            data={data?.images}
                            title='No search results found'
                        />
                    ) : (
                        <RenderCards title='No posts found' />
                    )}
                    {/* <GridView /> */}
                </div>
            </div>
        </section>
    );
}
